////////////////////////////////////////////////////////////////////////////////
#include "imageCodecJPEG.hpp"
#include "core/log/logManager.hpp"
#include "core/engine.hpp"
////////////////////////////////////////////////////////////////////////////////
PluginInfo pluginInfo = { "imageCodecJPEG",
                          "imageCodecJPEG",
                          "imagecodec",
                          0,
                          1};
////////////////////////////////////////////////////////////////////////////////
PluginImageCodecJPEG* lib = nullptr;
////////////////////////////////////////////////////////////////////////////////
const PluginInfo* getPluginInfo()
{
    return &pluginInfo;
}
////////////////////////////////////////////////////////////////////////////////
Library* getLibInstance(Engine* engine)
{
    if (lib == nullptr)
    {
        lib = new PluginImageCodecJPEG(*engine);
        if (lib)
        {
            engine->codecs().addImageCodec(lib);
        }
    }
    return lib;
}
////////////////////////////////////////////////////////////////////////////////
void closeLibInstance()
{
    if (lib)
    {
        lib->getEngine().codecs().removeImageCodec(lib);
    }
    delete lib;
    lib = nullptr;
}
////////////////////////////////////////////////////////////////////////////////
PluginImageCodecJPEG::PluginImageCodecJPEG(Engine &engine)
    : ImageCodec(engine)
{
    log().log() << "PluginImageCodecJPEG start...\n";
}
////////////////////////////////////////////////////////////////////////////////
PluginImageCodecJPEG::~PluginImageCodecJPEG()
{
    log().log() << "PluginImageCodecJPEG stop...\n";
}
////////////////////////////////////////////////////////////////////////////////
bool PluginImageCodecJPEG::load(ImageRGBAPtr image)
{
    return false;
}
////////////////////////////////////////////////////////////////////////////////
