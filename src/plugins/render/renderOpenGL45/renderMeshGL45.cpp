////////////////////////////////////////////////////////////////////////////////
#include "renderMeshGL45.hpp"
////////////////////////////////////////////////////////////////////////////////
RenderMeshGL45::RenderMeshGL45(const std::string& name)
    : RenderMeshGL(name)
{
}
////////////////////////////////////////////////////////////////////////////////
RenderMeshGL45::~RenderMeshGL45()
{
}
////////////////////////////////////////////////////////////////////////////////
RenderMeshPtr RenderMeshGL45::create(const std::string& name)
{
    return std::make_shared<RenderMeshGL45>(name);
}
////////////////////////////////////////////////////////////////////////////////
void RenderMeshGL45::setup(Mesh *mesh)
{
    vao.init();
    vao.bind();

    RenderMeshGL::setup(mesh);
}
////////////////////////////////////////////////////////////////////////////////
void RenderMeshGL45::draw()
{
    vao.bind();
    glDrawElements(GL_TRIANGLES, m_count, m_indicesType, nullptr);
}
////////////////////////////////////////////////////////////////////////////////
void RenderMeshGL45::printOn(Logger& o) const
{
    o << "RenderMeshGL45 " << getName();
}
////////////////////////////////////////////////////////////////////////////////
