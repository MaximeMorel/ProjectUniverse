////////////////////////////////////////////////////////////////////////////////
#include "renderDirect3D11.hpp"
#include "core/log/logManager.hpp"
////////////////////////////////////////////////////////////////////////////////
PluginInfo pluginInfo = { "renderDirect3D11",
                          "renderDirect3D11",
                          "render",
                          0,
                          1};
////////////////////////////////////////////////////////////////////////////////
PluginRenderDirect3D11* lib = nullptr;
////////////////////////////////////////////////////////////////////////////////
const PluginInfo* getPluginInfo()
{
    return &pluginInfo;
}
////////////////////////////////////////////////////////////////////////////////
Library* getLibInstance(Engine* engine)
{
    if (lib == nullptr)
    {
        lib = new PluginRenderDirect3D11(*engine);
    }
    return lib;
}
////////////////////////////////////////////////////////////////////////////////
void closeLibInstance()
{
    delete lib;
    lib = nullptr;
}
////////////////////////////////////////////////////////////////////////////////
PluginRenderDirect3D11::PluginRenderDirect3D11(Engine &engine)
    : RenderPlugin(engine)
{
    log().log() << "PluginRenderDirect3D11 start...\n";
}
////////////////////////////////////////////////////////////////////////////////
PluginRenderDirect3D11::~PluginRenderDirect3D11()
{
    log().log() << "PluginRenderDirect3D11 stop...\n";
}
////////////////////////////////////////////////////////////////////////////////
bool PluginRenderDirect3D11::init()
{
    return false;
}
////////////////////////////////////////////////////////////////////////////////
const char* PluginRenderDirect3D11::getShaderSearchPath() const
{
    return "shaders/direct3d11/";
}
////////////////////////////////////////////////////////////////////////////////
GfxContextType PluginRenderDirect3D11::getRequiredContextType() const
{
    return GfxContextType::DIRECT3D11;
}
////////////////////////////////////////////////////////////////////////////////
