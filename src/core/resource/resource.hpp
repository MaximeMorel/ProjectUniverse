#ifndef __RESOURCE_HPP__
#define __RESOURCE_HPP__
////////////////////////////////////////////////////////////////////////////////
#include <string>
#include <ostream>
#include "core/log/logger.hpp"
////////////////////////////////////////////////////////////////////////////////
/// \brief Resource base class
////////////////////////////////////////////////////////////////////////////////
class Resource
{
public:
    Resource(const std::string& name);
    virtual ~Resource();

    ////////////////////////////////////////////////////////////////////////////
    /// \brief Get resource name
    /// \return std::string containing resource name
    ////////////////////////////////////////////////////////////////////////////
    const std::string& getName() const;

    ////////////////////////////////////////////////////////////////////////////
    /// \brief Get resource id
    /// \return Resource id
    ////////////////////////////////////////////////////////////////////////////
    int getId() const;

    virtual size_t getMemSize() const;

    friend std::ostream& operator<<(std::ostream& o, const Resource& res);
    friend Logger& operator<<(Logger& o, const Resource& res);

protected:
    virtual void printOn(std::ostream& o) const=0;
    virtual void printOn(Logger& o) const=0;

private:
    std::string m_name;
    int m_id;
};
////////////////////////////////////////////////////////////////////////////////
#endif // __RESOURCE_HPP__
