////////////////////////////////////////////////////////////////////////////////
#include "testMat.hpp"
#include "core/math/mat3.hpp"
#include "core/math/mat4.hpp"
////////////////////////////////////////////////////////////////////////////////
void TestMat::setUp()
{
}
////////////////////////////////////////////////////////////////////////////////
void TestMat::tearDown()
{
}
////////////////////////////////////////////////////////////////////////////////
void TestMat::testEqual3()
{
    Mat3 m1(1, 2, 3, 4, 5, 6, 7, 8, 9);
    Mat3 m2 = m1;

    CPPUNIT_ASSERT(m1 == m2);

    for (int i = 0; i < 9; ++i)
    {
        m2 = m1;
        CPPUNIT_ASSERT(m1 == m2);
        m2[i] = 99;
        CPPUNIT_ASSERT(m1 != m2);
    }

    m2 = m1;
    m2 = m2.transpose().transpose();
    CPPUNIT_ASSERT(m1 == m2);
}
////////////////////////////////////////////////////////////////////////////////
void TestMat::testEqual4()
{
    Mat4 m1(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);
    Mat4 m2 = m1;

    CPPUNIT_ASSERT(m1 == m2);

    for (int i = 0; i < 16; ++i)
    {
        m2 = m1;
        m2[i] = 99;
        CPPUNIT_ASSERT(m1 != m2);
    }

    m2 = m1;
    m2 = m2.transpose().transpose();
    CPPUNIT_ASSERT(m1 == m2);
}
////////////////////////////////////////////////////////////////////////////////
void TestMat::testMult4()
{
    Mat4 m1(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);
    Mat4 m2(2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32);

    Mat4 m3 = m1*2;

    CPPUNIT_ASSERT(m3 == m2);

    m3 = m1*m2;
    Mat4 m4(180, 200, 220, 240, 404, 456, 508, 560, 628, 712, 796, 880, 852, 968, 1084, 1200);
    CPPUNIT_ASSERT(m3 == m4);
}
////////////////////////////////////////////////////////////////////////////////
void TestMat::testInv3()
{
    Mat3 m1(5);
    Mat3 m2 = m1.inverse();

    Mat3 m3 = m1*m2;

    CPPUNIT_ASSERT(m3 == Mat3(1));
}
////////////////////////////////////////////////////////////////////////////////
