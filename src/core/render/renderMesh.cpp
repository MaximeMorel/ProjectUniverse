////////////////////////////////////////////////////////////////////////////////
#include "renderMesh.hpp"
#include "renderManager.hpp"
#include "renderPlugin.hpp"
////////////////////////////////////////////////////////////////////////////////
ResourceType RenderMesh::type("RenderMesh");
////////////////////////////////////////////////////////////////////////////////
RenderMesh::RenderMesh(const std::string& name)
: Resource(name)
{
}
////////////////////////////////////////////////////////////////////////////////
RenderMesh::~RenderMesh()
{
}
////////////////////////////////////////////////////////////////////////////////
RenderMeshPtr RenderMesh::create(const std::string& name)
{
    /// virtual constructor idiom, use create facility from render plugin
    return ::render().impl()->createRenderMesh(name);
}
////////////////////////////////////////////////////////////////////////////////
void RenderMesh::setup(Mesh* mesh)
{
}
////////////////////////////////////////////////////////////////////////////////
void RenderMesh::draw()
{
}
////////////////////////////////////////////////////////////////////////////////
uint32_t RenderMesh::getNumTriangles() const
{
    return 0;
}
////////////////////////////////////////////////////////////////////////////////
void RenderMesh::printOn(Logger& o) const
{
    o << "RenderMesh " << getName();
}
////////////////////////////////////////////////////////////////////////////////
