////////////////////////////////////////////////////////////////////////////////
#include "loggerStream.hpp"
////////////////////////////////////////////////////////////////////////////////
LoggerStream::LoggerStream(const std::string& name, std::ostream& stream)
    : Logger(name)
    , m_outStream(stream.rdbuf())
{
}
////////////////////////////////////////////////////////////////////////////////
LoggerStream::~LoggerStream()
{

}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(long rhs)
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(unsigned long rhs)
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(bool rhs)
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(short rhs)
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(unsigned short rhs)
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(int rhs)
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(unsigned int rhs)
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(double rhs)
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(float rhs)
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(long double rhs)
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(const void* rhs)
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(const char* rhs)
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(const std::string& rhs)
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(std::ostream& (*rhs)(std::ostream&))
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(std::ios& (*rhs)(std::ios&))
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
Logger& LoggerStream::operator<<(std::ios_base& (*rhs)(std::ios_base&))
{
    m_outStream << rhs;
    return *this;
}
////////////////////////////////////////////////////////////////////////////////
