////////////////////////////////////////////////////////////////////////////////
#include "logger.hpp"
#include <iostream>
////////////////////////////////////////////////////////////////////////////////
/*LoggerBuf::LoggerBuf(std::ostream& stream)
    : std::basic_streambuf<char>(*stream.rdbuf())
{
}
////////////////////////////////////////////////////////////////////////////////
LoggerBuf::~LoggerBuf()
{
}
////////////////////////////////////////////////////////////////////////////////
std::char_traits<char>::int_type LoggerBuf::overflow(int_type c)
{
    return std::streambuf::overflow(c);
}
////////////////////////////////////////////////////////////////////////////////
Logger::Logger(const std::string& name)
    : m_name(name)
{
}
////////////////////////////////////////////////////////////////////////////////
Logger::~Logger()
{
}
////////////////////////////////////////////////////////////////////////////////
const std::string& Logger::getName() const
{
    return m_name;
}*/
////////////////////////////////////////////////////////////////////////////////
Logger::Logger(const std::string& name)
: m_name(name)
{
}
////////////////////////////////////////////////////////////////////////////////
Logger::~Logger()
{
}
////////////////////////////////////////////////////////////////////////////////
const std::string& Logger::getName() const
{
    return m_name;
}
////////////////////////////////////////////////////////////////////////////////
