////////////////////////////////////////////////////////////////////////////////
#include "buffer.hpp"
////////////////////////////////////////////////////////////////////////////////
template <typename T>
Buffer<T>::Buffer()
{
}
////////////////////////////////////////////////////////////////////////////////
template <typename T>
Buffer<T>::~Buffer()
{
}
////////////////////////////////////////////////////////////////////////////////
template <typename T>
bool Buffer<T>::resize(size_t n)
{
    m_buf.resize(n);
    return true;
}
////////////////////////////////////////////////////////////////////////////////
template <typename T>
size_t Buffer<T>::getMemSize() const
{
    return 0;
}
////////////////////////////////////////////////////////////////////////////////
template <typename T>
void Buffer<T>::printOn(Logger& o) const
{

}
////////////////////////////////////////////////////////////////////////////////
