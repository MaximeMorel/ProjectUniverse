////////////////////////////////////////////////////////////////////////////////
#include "inputDeviceKeyboard.hpp"
////////////////////////////////////////////////////////////////////////////////
InputDeviceKeyboard::InputDeviceKeyboard()
{
    for (size_t i = 0; i < Input::Keyboard::NB_KEYS; ++i)
    {
        m_keys[i] = Input::KeyMode::UP;
    }
}
////////////////////////////////////////////////////////////////////////////////
InputDeviceKeyboard::~InputDeviceKeyboard()
{
}
////////////////////////////////////////////////////////////////////////////////
void InputDeviceKeyboard::update()
{

}
////////////////////////////////////////////////////////////////////////////////
bool InputDeviceKeyboard::isPressed(Input::Keyboard key)
{
    return m_keys[key] == Input::KeyMode::DOWN || m_keys[key] == Input::KeyMode::DOWN_ONCE;
}
////////////////////////////////////////////////////////////////////////////////
void InputDeviceKeyboard::set(Input::Keyboard key, Input::KeyMode mode)
{
    m_keys[key] = mode;
}
////////////////////////////////////////////////////////////////////////////////
size_t InputDeviceKeyboard::getMemSize() const
{
    return InputDevice::getMemSize() + sizeof(m_keys);
}
////////////////////////////////////////////////////////////////////////////////
void InputDeviceKeyboard::printOn(Logger& o) const
{

}
////////////////////////////////////////////////////////////////////////////////
